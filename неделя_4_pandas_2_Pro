'''Задача 1: DateTime index
Подгрузите данные 'data.csv' (возможно придется указать кодировку encoding сp1250) в переменную data.
Преобразуйте колонку InvoiceDate в DateTime index.
Удалите колонку InvoiceDate.'''

import pandas as pd

data = pd.read_csv('/content/data.csv', encoding='cp1250')
data.index = pd.to_datetime(data.InvoiceDate)
data.drop('InvoiceDate', axis=1, inplace=True)
data.isna().sum()


'''Задача 2
Используя датафрейм data, выберите все заказы, совершенные за период 7 декабря 2010 года с часа дня до часа и одной минуты.'''

period = data[('2010-12-07 13:00:00' <= data.index) & (data.index <= '2010-12-07 13:01:00')]
period


'''Задача 3
По той же рабочей табличке:
посчитайте количество уникальных наименований товаров (Description), которые купили за весь период (т.е. по всем данным). 
Используйте соответствующий метод.
найдите все уникальные страны, в которых были размещены заказы'''

print(period['Description'].nunique())
print(data['Description'].nunique())
data_1 = data.dropna(axis=0, how='any', subset=['Description'])['Country'].unique()
data_1


'''Задача 4
Посчитайте матрицу корреляции Спирмена для наших данных.
Найдите 1%, 50% и 99% квантили цены за единицу товара.
Для решения данной задачи потребуется самостоятельно найти способ получения матрицы Спирмена. 
Обратите внимание, на вебинаре продемонстрирован пример матрицы Пирсона.'''

print(data.corr(method='spearman'))
print()
data['UnitPrice'].quantile([0.01, 0.5, 0.99])


'''Задача 5
Найдите количество клиентов, которые оформляли заказ в понедельники. Для этого
сделайте подвыборку, соответствующую условию "в понедельник",
посчитайте количество уникальных ID клиентов.
Для решения этой задачи потребуется использовать параметр индекса weekday 
(по аналогии с рассмотренными на вебинаре примерами .index.month, .index.day)'''

data[(data.index.day == 0)]['CustomerID'].nunique()
