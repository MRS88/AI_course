def P(n): #(факторил)
  f =1
  for x in range(2,n+1):
    f*=x
  return f

# Сочетание 
def C_n_m(n,m):
  return P(n)/ (P(n-m)* P(m))

# Размещение 
def A_(n,m):
  return C_n_m(n,m) * P(m)

# Перестановка с повторением
def P_rep(n,m):
  add = 1
  for x in m:
    add*=P(x)
  return P(n)/ add

# Сочетание с повторением
def C_n_m_rep(n,m):
  return P(n+m-1)/ (P(n-1)* P(m))

# Размещение с повторением
def A_rep(n,m):
  return n**m


'''Комбинаторика
Задача 1
Сколько существует выигрышных комбинаций из двух карт при игре в 21 (Блекджек)? 
(выигрышными комбинациями считаются карта стоимостью 10 + туз)'''

# порядок карт не важен
C_n_m(8,2)


'''Задача 2
У Олега дома живут пять котов.
а) Сколькими способами можно усадить четырех котов по углам комнаты?
б) Сколькими способами можно выпустить котов погулять? 
в) Сколькими способами Вася может взять на руки двух котов (одного на левую, другого – на правую)?'''

cats = 5
# а) порядок расстановки котов важен
print(A_(cats, 4))
# б) факториал
print(P(cats))
# в) порядок расстановки котов важен
print(A_(cats, 2))


'''Задача 3
В лифт двенадцатиэтажного дома сели три пассажира. Каждый независимо от других с одинаковой вероятностью может выйти на любом (начиная со второго) этаже. 
1) Сколькими способами пассажиры могут выйти на одном и том же этаже (порядок выхода не имеет значения)? 
2) Сколькими способами два человека могут выйти на одном этаже, а третий – на другом? 
3) Сколькими способами люди могут выйти на разных этажах? 
4) Сколькими способами пассажиры могут выйти из лифта?'''

# 1) 
print(C_n_m(11,3))
# 2) выходят вдвоем - порядок важен
print(A_(11, 2) * A_(10, 1))
# 3) выходят по одному на разных этажах
sep = A_(11,1) * A_(10,1) * A_(9,1)
print(sep)
# 4) выходят втроем 
A_(11,3) + A_(11,2) * A_(10,1) + sep


'''Задача 4
В кошельке находятся одно-, двух- и десятирублевые монеты. 
Сколькими способами можно извлечь 4 монеты из кошелька?'''

C_n_m_rep(3,4)


'''Задача 5
Сколько всего существует вариантов IPv4 адресов (https://ru.wikipedia.org/wiki/IPv4) ?''

print(256*256*256*256)
# или
C_n_m(256,1) * C_n_m(256,1) * C_n_m(256,1) * C_n_m(256,1)


'''Множества
Задача 1
В классе 36 учеников. Каждый из них пользуется хотя бы одним из видов городского транспорта: 
метро, автобусом и троллейбусом. Всеми тремя видами транспорта пользуются 5 учеников, 
метро и автобусом – 17 учеников, метро и троллейбусом – 15 учеников, троллейбусом и автобусом – 7 учеников.
Сколько учеников пользуются только одним видом транспорта?'''

36 - 5 - (17-5) - (15-5) - (7-5)


'''Задача 2
Первую или вторую контрольную работу по математике успешно написали 33 студента, 
первую или третью – 32 студента, вторую или третью – 31 студент. 
Не менее двух контрольных работ выполнили 20 студентов.
Сколько студентов успешно решили только одну контрольную работу?'''

# из каждого подмножества убираем тех, кто решил менее 2 к/р,
# суммируем их, чтобы получить общее количество студентов, решивших одну из 
# двух работ. Делим на 2
((33-20) + (32-20) + (31-20)) / 2


'''Задача 3
Дано множество А={1, 2, 4}, существует множество B. Такое, что B\E = {3} и  A∩B  = {1}.
Найти множество B, если его мощность равна 2.'''

A = {1, 2, 4}
B = {1, 3}
E = {1, 2}
print(B.difference(E))
print(A.intersection(B))
