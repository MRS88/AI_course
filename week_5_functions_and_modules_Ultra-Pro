'''Задача 1
Уже весна, скоро в отпуск. Необходимо написать функцию расчета стоимости вашего путешествия.
Определите функцию с названием hotel_cost и с аргументом Количество ночей в качестве входных данных. 
Цена отеля будет 140 у. е. за ночь. Выходит, функция должна вернуть стоимость всех ночей.
Определите функцию под названием plane_ride_cost, которая на вход принимает строку Город. 
Такая функция должна вернуть цену перелета в зависимости от места: 
если это Крым, то перелет обойдется в 120 у. е., если Шри-Ланка - 800 у. е., если Каир - 400 у. е., если Сочи - 120 у. е.
Напишите функцию rental_car_cost с аргументом Количество дней. 
Эта функция должна рассчитать стоимость аренды авто, если за сутки вы должны оплачивать саму ренту (40 у. е.) 
+ стоимость услуг страхового агентства (+1% от суммарной стоимости услуг каждый следующий день. 
Т. е. первый день 1% от стоимости, второй - берется 1% от стоимости предыдущего дня (включая 1% за предыдущий день) и т. д.
Если вы арендуете на 7 и более дней, то скидка - 50 у. е., если от 3 до 6 дней включительно - 20 у. е. 
Обе скидки получить сразу нельзя. Задача состоит в том, чтобы эти функции (hotel_cost, plane_ride_cost, rental_car_cost) 
были локальными в составе одной глобальной функции trip_cost, которая бы возвращала сумму этих локальных функций.'''

def trip_cost(days, nights, city):

  def hotel_cost(nights):
    return nights * 140

  def plane_ride_cost(city):
    if city == 'Крым' or 'Сочи': return 120
    if city == 'Шри-Ланка': return 800
    if city == 'Каир': return 400

  def rental_car_cost(days):
    total_days = days # так как days в цикле будет равно 0
    cost = 0
    while days != 0:
      cost += 40 + (40 + cost) * 0.01
      days -= 1
    if total_days >= 7: return round(cost, 2) - 50   
    elif 3 <= total_days <= 6: return round(cost, 2) - 20
    else: return cost

  return hotel_cost(nights) + plane_ride_cost(city) + rental_car_cost(days)

print(trip_cost(5, 4, 'Сочи'))


'''Задача 2
Напишите функцию, которая считает факториал заданного числа.'''

# 1 способ
import numpy as np

def factor():
  num = int(input('Введите целое неотрицательное число: '))
  if num == 0: return 1
  else: return np.prod([i for i in range(1, num+1)])

print(factor())

# 2 способ
def factor_2():
  n = int(input('Введите целое неотрицательное число: '))
  if n == 0: return 1
  else:
    res = 1
    for i in range(1, n+1):
      res *= i
    return res    

factor_2()


'''Задача 3
Напишите лямбда-функцию, которая считает полную площадь конуса: S = πR(l + R).'''

from math import pi
L = float(input())
R = float(input())
print((lambda R, L: pi*R*(L+R))(R, L))


'''Задача 4
Напишите 2 локальные функции, которые будут переводить доллары в рубли и евро в рубли, 
внутри глобальной функции, которая будет принимать на вход число (рубли) и выводить конвертированные валюты.'''

def change(rub):

  def rub_dollar():
    return round(rub/77.89, 2)

  def rub_euro():
    return round(rub/91.67, 2)

  return f'{rub} руб. = €{rub_euro()} или ${rub_dollar()}'

print(change(1000)) 


'''Задача 5
Напишите функцию-генератор, которая будет выводить числа Фибоначчи.'''

def fib(n):
  fib1, fib2 = 1, 1
  for i in range(n):
    yield fib1
    fib1, fib2 = fib2, fib1+fib2

for j in fib(11):
  print(j, end=' ')
