'''Задача 1
Используя соответствующую функцию библиотеки Pandas, подгрузите датасет из файла 'train.csv'.
Выведите на экран первые 5 строк датафрейма (метод head).
В качестве индексов датафрейма укажите нулевой столбец.'''

import pandas as pd

data = pd.read_csv('/content/train.csv', index_col=0) 
data.head(5)


'''Задача 2
Для подгруженного из предыдущей задачи датасета:
посчитайте, сколько всего записей,
определите тип данных в каждом столбце,
проверьте: есть ли пропуски,
выведите на экран описательные статистики.
P.S. Используйте соответствующие встроенные методы.'''

print(data.size, '- количество элементов')
print(data.count().sum(), '- всего записей')
print(data.dtypes)
print()
print('\nПропуски:', data.isna().sum())
data.describe(include=['O'])


'''Задача 3
Используя соответствующий встроенный метод, "дропните", т.е. удалите из нашей таблички все столбцы, у которых количество пропущенных значений больше 200.

Найдите все такие столбцы (метод .isna() + подвыборка с условием)
Определите их названия
"Дропните их" (используйте метод .drop(имена столбцов))
Результат сохраните в новой табличке data_1, исходную менять не нужно
Могут быть полезны следующие параметры и методы:

columns - названия столбцов датафрейма
df[условие] - подвыборка элементов по условию
.drop - удаление строк или столбцов (в зависимости от параметра axis)'''

drop_col = data.columns[data.isna().sum() > 200]
data_1 = data.drop(drop_col, axis=1)
data_1


'''Задача 4
Данные, с которыми мы работаем в этом домашнем задании, содержат информацию о проданных домах. В датафрейме из прошлой задачи (data_1) найдите все дома, проданные в 2007 году, у которых цена продажи выше 300000 и есть бассейн. Для подвыборки с указанными условиями сначала создайте маску:

цена продажи SalePrice
год продажи YrSold
наличие бассейна можно определить по столбцу PoolArea'''

mask_sp = (data_1.SalePrice >= 300000) & (data_1.YrSold == 2007) & (data_1.PoolArea > 0)
data_1[mask_sp]


'''Задача 5
Добавьте к табличке data_1 новый столбец с названием 'Flag'. Присвойте ему значения 0 или 1 в случайном порядке. Для этого

создайте одномерный массив из случайных целых чисел 0 или 1
размер массива должен соответствовать количеству наблюдений в датафрейме data_1
создайте новый столбец и присвойте ему значения одномерного массива'''

import numpy as np

lst = np.random.randint(2, size=(data_1.shape[0]+1))
flag = pd.Series(lst, dtype=int)
data_1.assign(Flag=flag)
