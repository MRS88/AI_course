'''Задача 1
Используя библиотеку Matplotlib, постройте график экспоненты. 
Подпишите оси. Дайте название графику.'''

import matplotlib.pyplot as plt 
import numpy as np 
import seaborn as sns 
import pandas as pd 

x = np.arange(20)
y = np.exp(x)
plt.plot(y)
plt.title('Экспонента')
plt.xlabel('Ось X')
plt.ylabel('Экспонента по X')
plt.grid()
plt.show()


'''Задача 2
Используя библиотеку Matplotlib, постройте графики функций  y=x3  и  y=x2  на одном графике.

Дайте название графику
Дайте названия осям
Присвойте лейблы и выведите легенду
Графики функций должны быть отрисованы пунктирными линиями (любыми из доступных на ваш вкус)'''

x = np.arange(10)
y1 = x ** 3
y2 = x ** 2
plt.plot(x, y1, 'c--', label='x^3')
plt.plot(x, y2, 'r-.', label='x^2')
plt.xlabel('Значение X')
plt.ylabel('Значение Y')
plt.title('X^2 и X^3')
plt.legend()
plt.show()


'''Задача 3
Выведите на экран картинку ascent, которая подгружается кодом ниже.'''
# Загружаем картинку из библиотеки scipy
from scipy import misc
img = misc.ascent()

plt.imshow(img)
plt.show()


'''Задача 4
Подгрузите данные datatraining.txt при помощи соответствующей функции библиотеки Pandas. 
Преобразуйте индекс в datetime index, удалите столбец с датой. 
Постройте график всех парных взаимосвязей с разметкой цвета в соответствии с метками классов (столбец Occupancy).
P.S. Используйте функцию sns.pairplot c параметром hue.'''

# Подгружаем google-диск
from google.colab import drive 
drive.mount('/content/drive/')

data_raw = pd.read_csv('/content/drive/My Drive/datatraining.txt')
data = data_raw.copy()
data.index = pd.to_datetime(data.date)
data.drop('date', axis=1, inplace=True)

sns.pairplot(data, hue='Occupancy', palette='Set1')
plt.show()


'''Задача 5
Постройте violinplot всех признаков датасета из прошлой задачи.
P.S. График должен быть читаемым, т. е.отрегулируйте размер графика,
предварительно отскейлите все числовые признаки, т. е. приведите к стандартному нормальному распределению при помощи функции ниже.'''

# Функция для 
def scale(df):
    return (df - df.mean()) / df.std()
    
plt.figure(figsize=(10,5))
data_std = scale(data).head()
sns.violinplot(data=data_std, axis=1)
plt.show()    
    
