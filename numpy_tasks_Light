'''Задача 1
Подгрузите файл train_vector_1.csv с помощью функции np.loadtxt.
Назовите подгруженный массив my_array.
Убедитесь, что подгруженный массив имеет тип np.ndarray (выведите тип переменной my_array).'''

import numpy as np

my_array = np.loadtxt('train_vector_1.csv')
print(type(my_array))
print(my_array[:10])


'''Задача 2
Напишите код, который считает среднее значение всех элементов массива (без использования встроенных функций np.mean и т.д.). Для решения задачи воспользуйтесь циклом.

С помощью команды %%timeit отобразите время выполнения написанного кода.
Преобразуйте массив my_array в список (с помощью метода list()), сохраните его в переменной my_list.
В новой ячейке посчитайте среднее значение всех элементов списка (воспользуйтесь тем же самым кодом, что и для массива).
Командой %%timeit отобразите время выполнения и этой ячейки.'''

'''Использовал с одним знаком %, т.к. с двумя выполняет всю ячейку и выводит тыщу строк'''
%timeit mean_arr = sum(my_array) / len(my_array)
my_list = list(my_array)
print(mean_arr)
print(np.mean(my_array), 'проверка с помощью "np.mean"')

%timeit mean_list = sum(my_list) / len(my_list)
print(mean_list)


'''Задача 3
Подгрузите файл iris.csv с помощью встроенной функции np.loadtxt. Назовите его my_2d_array. 
Напишите код, который считает сумму элементов массива по столбцам 
(для решения данной задачи воспользуйтесь разделом ноутбук "Операции с двумерными массивами и встроенные методы").'''

my_2d_array = np.loadtxt('iris.csv', delimiter=',', skiprows=1)
print(my_2d_array.sum(axis=0))


'''Задача 4
Используя библиотеку numpy, создайте массив 3x3, значения которого находятся в диапазоне от 11 до 40 (раздел "Семплирование из распределений").
Не используя цикл for, выведите на экран список элементов, которые меньше 20 (раздел "Индексация").
Просуммируйте все элементы, не используя цикл for (раздел "Встроенные методы").'''

import numpy as np

my_arr = np.random.randint(11, 40, (3,3))
print(my_arr) # убедиться, что есть элементы меньше 20
my_arr = my_arr.reshape(9,) # изменяем в одномерный массив
i = 0
while i <= 8: # последний индекс в массиве
  if my_arr[i] < 20:
    print(my_arr[i], end=' ')
  i += 1
  
  
'''Задача 5
Создайте массив, который будет содержать списки с именем студента(str), его возрастом(int) и средней оценкой(float) 
(обратите внимание на пример с занятия со списком автомобильных регионов).
Отсортируйте такой массив (обратите внимание на параметр order метода sort()).
Замените значение, отвечающее за возраст, у всех студентов на одно и то же, например, 10. Отсортируйте такой массив.'''

import numpy as np

stud_arr = np.array([('Sarah', 20, 4.4),
                     ('Alex', 22, 4.5), 
                     ('Bob', 19, 4.7)], 
                    dtype = [('name', 'U10'), ('age', int), ('point', float)])

print(np.sort(stud_arr, order='name'))
print(np.sort(stud_arr, order='age'))
print(np.sort(stud_arr, order='point'))
print()
''' Больше ничего не придумал, кроме как перебором'''
new_arr = []
for lst in stud_arr:
  lst[1] = 10
  new_arr.append(lst)

new_arr = np.array(new_arr, 
                   dtype = [('name', 'U10'), ('age', int), ('point', float)])

print(np.sort(new_arr, order='name'))
print(np.sort(new_arr, order='age'))
print(np.sort(new_arr, order='point'))
