'''Задача 1
Стрелок попадает в цель с одной и той же вероятностью при каждом выстреле. 
Какова эта вероятность, если вероятность хотя бы одного попадания при трех выстрелах равна 0,853?'''

non_P = (1 - 0.853) ** (1/3) # ни одного попадания при трех выстрелах
P = 1 - non_P 
print(P)


'''Задача 2
На шахматную доску из 64 клеток ставят наугад две ладьи белого и чёрного цвета. 
С какой вероятностью они будут «бить» друг друга?'''

# первая ладья занимает 1 клетку => (7 + 7) клеток она ходит
# количество свободных клеток для второй ладьи = 63
14 / 63


'''Задача 3
Подбрасывается 20 монет. Найти вероятность того, что
на всех монетах выпадет решка;
орёл выпадет КАК МИНИМУМ на половине монетах. 
(Для решения этой части используйте формулу Бернулли).'''

# а) события независимы, вероятность решки = 0.5
print(0.5**20)

# б)
from math import factorial as f
k = 10 # минимум исходов
n = 20
p = 0.5 # вероятность выпадения орла
C = f(n) / (f(k) * f(n-k))
p_k = p ** k
q = (1 - p) ** (n-k)
print(C * p_k * q)


'''Задача 4
Какова вероятность того, что в 5 сданных картах будет один туз и один король? (Колода 36 карт)'''

n, m = 36, 5
C_all = f(n) / (f(n-m) * f(m)) # способов извлечь 5 карт из колоды
# теперь считаем, сколько способов вытащить туза, короля и другие 3 карты
C_ace, C_king = 5, 5 # кол-во способов извлечь один туз и одного короля соответственно из выборки в 5 карт
C_rem = f(34) / (f(34-2) * f(2)) # убрали туза и короля
C = C_ace * C_king * C_rem # кол-во комбинаций 5 карт с тузом и королем
print(C / C_all)


'''Задача 5
В ящике находится 19 качественных и 4 бракованных детали. Наугад извлекаются 2 детали. Найти вероятность того, что
обе детали будут качественными;
обе детали будут бракованными;
одна деталь будет качественной, а одна – бракованной.'''

# находим кол-во способов извлекать 2 детали из всех:
n, m = 23, 2
C_all = f(n) / (f(n-m) * f(m))
# находим кол-во способов извлекать 2 качественные детали
n_q, m_q = 19, 2
C_qlt = f(n_q) / (f(n_q - m_q) * f(m_q))
print(round(C_qlt/C_all, 3), ': вероятность 2 качественных деталей')

# находим способы для бракованных деталей
n_nq, m_nq = 4, 2
C_nqlt = f(n_nq) / (f(n_nq - m_nq) * f(m_nq))
print(round(C_nqlt/C_all, 3), ': вероятность 2 бракованных деталей')

# так как вероятности образуют полную группу событий, то:
print(round(1 - (C_qlt + C_nqlt)/C_all, 3), ': вероятность 1 бракованной и 1 качественной')
